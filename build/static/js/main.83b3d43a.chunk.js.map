{"version":3,"sources":["Button.tsx","Menu.tsx","Email.tsx","ExternalLink.tsx","CV.tsx","Github.tsx","MainContent.tsx","BackgroundGradient.tsx","index.tsx","App.tsx"],"names":["Button","props","onClick","className","id","text","Menu","useState","email","cv","github","classes","setClasses","button","style","document","querySelector","setTimeout","setProperty","getPropertyValue","resetMenuAnimationDelay","onSelectedButtonChange","Object","entries","k","includes","currentCenterButton","Email","emailInputRef","useRef","readOnly","ref","value","href","CopyButton","inputRef","floatingTexts","setFloatingTexts","timeoutId","setTimeoutId","keyCounter","input","undefined","clearTimeout","current","select","execCommand","setSelectionRange","key","ExternalLink","rel","target","children","CV","click","selector","Github","NotableProjectsList","name","language","description","map","project","Project","projectName","MainContent","SwitchTransition","mode","CSSTransition","selectedButton","timeout","classNames","BackgroundGradient","transform","offset","ReactDOM","render","setSelectedButton","backgroundGradientOffset","setBackgroundGradientOffset","newButton","getElementById"],"mappings":"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","file":"static/js/main.83b3d43a.chunk.js","sourcesContent":["import React from 'react'\nimport './css/Button.css'\n\nexport interface ButtonProps {\n    text: string\n    className?: string\n    id?: string\n\n    onClick?(): void\n}\n\nexport default function Button(props: ButtonProps) {\n    return (\n        <p onClick={props.onClick} className={'button ' + (props.className || '')} id={props.id}>{props.text}</p>\n    )\n}\n","import React, {useState} from 'react'\nimport Button from './Button'\nimport './css/Menu.css'\n\nexport type ButtonName = 'email' | 'cv' | 'github'\n\nexport interface MenuProps {\n    className?: string\n\n    onSelectedButtonChange(newButton: ButtonName): void\n}\n\nexport default function Menu(props: MenuProps) {\n    const [classes, setClasses] = useState({\n        email: 'left',\n        cv: 'center',\n        github: 'right',\n    })\n\n    function onClick(button: ButtonName) {\n        resetMenuAnimationDelay()\n        props.onSelectedButtonChange(button)\n        setClasses({\n            ...classes,\n            [button]: 'center large',\n            [currentCenterButton()]: (classes[button] === 'center') ? 'center large' : classes[button],\n        })\n    }\n\n    function currentCenterButton(): ButtonName {\n        for (const [k, v] of Object.entries(classes)) {\n            if (v.includes('center'))\n                return k as ButtonName\n        }\n        return 'cv'\n    }\n\n    return (\n        <div className={'menu ' + (props.className || '')}>\n            <Button id='email' text='Email' onClick={() => onClick('email')} className={classes['email']}/>\n            <Button id='cv' text='CV' onClick={() => onClick('cv')} className={classes['cv']}/>\n            <Button id='github' text='Github' onClick={() => onClick('github')} className={classes['github']}/>\n        </div>\n    )\n}\n\nfunction resetMenuAnimationDelay() {\n    const style = (document.querySelector(':root') as any).style\n    setTimeout(() => {\n        style.setProperty('--menu-button-animation-delay', 0)\n    }, style.getPropertyValue('--menu-button-animation-delay'))\n}\n","import React, {RefObject, useRef, useState} from 'react'\nimport './css/Email.css'\n\nexport default function Email() {\n    const email = 'bz.ennm@gmail.com'\n    const emailInputRef = useRef(null)\n\n    return (\n        <div className='email'>\n            <input className='email-input' readOnly ref={emailInputRef} value={email}/>\n            <a href={`mailto:${email}`} className='email-link'>{email}</a>\n            <CopyButton inputRef={emailInputRef}/>\n        </div>\n    )\n}\n\ninterface CopyEmailButtonProps {\n    inputRef: RefObject<HTMLInputElement>\n}\n\nfunction CopyButton(props: CopyEmailButtonProps) {\n    const [floatingTexts, setFloatingTexts] = useState<any[]>([])\n    const [timeoutId, setTimeoutId] = useState<any | undefined>()\n    const keyCounter = useRef(0)\n\n    function onButtonClick() {\n        if (timeoutId !== undefined)\n            clearTimeout(timeoutId)\n\n        if (props.inputRef.current === null)\n            return\n\n        copyInputToClipboard(props.inputRef.current)\n        setFloatingTexts([...floatingTexts, <p className='copied-floating-text' key={keyCounter.current}>copied</p>])\n        keyCounter.current++\n        setTimeoutId(setTimeout(() => setFloatingTexts([]), 1000))\n    }\n\n    return (\n        <div className='copy-button-wrapper'>\n            {floatingTexts}\n            <a className='copy-button' onClick={onButtonClick}>\n                copy\n            </a>\n        </div>\n    )\n}\n\nfunction copyInputToClipboard(input: HTMLInputElement): void {\n    input.select()\n    document.execCommand('copy')\n    input.setSelectionRange(0, 0)\n}\n","import React from \"react\";\n\nexport interface ExternalLinkProps {\n    children: any\n    href: string\n    className?: string\n}\n\nexport default function ExternalLink(props: ExternalLinkProps) {\n    return <a className={props.className} href={props.href} rel='noopener noreferrer'\n              target='_blank'>{props.children}</a>\n}\n","import React from 'react'\nimport ExternalLink from \"./ExternalLink\"\nimport './css/CV.css'\n\nexport default function CV() {\n    function click(selector: string) {\n        (document.querySelector(selector) as any).click()\n    }\n\n    return (\n        <p className='cv'>\n            <br/>\n            I am a programmer from Serbia interested in many programming languages and technologies.\n            I accept freelance and remote jobs. I might accept a non-remote job if you have an office in Serbia.\n            I used to study electrical engineering, but dropped out to focus completely on programming.\n            <br/>\n            <br/>\n            I have worked and am comfortable with these web technologies: Django, TypeScript, JavaScript, Elm, jQuery,\n            React, Vue, CSS, SCSS, ASP.NET Core, Blazor, Express, Rocket (Rust framework), Actix (Rust framework).\n            I have worked on various projects in the following languages:\n            Go, C++, C, Rust, Python, C#, JS/TypeScript. I have worked on some web scrape and data extraction jobs using\n            Go (colly), TypeScript (pupeteer, cheerio) and Python (Scrapy).\n            <br/>\n            <br/>\n            I have done embedded programming using C on a PIC microcontroller.\n            <br/>\n            <br/>\n            I've also used the Lua language in the past. I have some experience with Bash and Perl, even though I\n            highly dislike Perl. I work primarily in a UNIX environment, and have a good amount of experience with\n            system administration and task automation. I have some experience with Kubernetes, Helm and Terraform.\n            <br/>\n            <br/>\n            I have written and deployed both the front end and the back end\n            of <ExternalLink href='https://skondric.com'>a Serbian online electronics shop</ExternalLink>. I have worked\n            on user libraries, documentation and front-end code\n            for <ExternalLink href='https://publit.io'>Publitio</ExternalLink>, a cloud media management website similar\n            to <ExternalLink href='https://cloudinary.com/'>Cloudinary</ExternalLink>.\n            <br/>\n            I've worked on <ExternalLink href=\"https://avif.io\">avif.io</ExternalLink>, completely implementing the\n            functionality. Avif.io is a file conversion tool, used to convert various file formats\n            into <ExternalLink href=\"https://en.wikipedia.org/wiki/AV1#AV1_Image_File_Format_(AVIF)\">AVIF</ExternalLink>.\n            It does this entirely inside the browser, using WASM binaries compiled from Rust. You can see an older\n            version of the source code <ExternalLink href=\"https://github.com/ennmichael/avif.io\">here</ExternalLink>.\n            <br/>\n            <br/>\n            I've also worked\n            a lot with the Unity game engine on some 2D games.\n            <br/>\n            <br/>\n            I am a microservice architecture enthusiast. I am a big fan of the Rust programming language and .NET.\n            I don't use editors without proper VIM keybindings. My go-to editor is neovim. Make sure to check\n            out the <button onClick={() => click('#github')} className='link-button'>Github tab</button>.\n            <br/>\n            <br/>\n            If you wish to work with me, please <button onClick={() => click('#email')} className='link-button'>\n            send me an email</button>.\n        </p>\n    )\n}\n","import React from 'react'\nimport ExternalLink from \"./ExternalLink\"\nimport './css/Github.css'\n\nexport default function Github() {\n    return (\n        <>\n            <NotableProjectsList/>\n        </>\n    )\n}\n\ninterface GithubProject {\n    name: string\n    description: string\n    language: string\n}\n\nfunction NotableProjectsList() {\n    const notableProjects = [\n        {name: 'physics-pancake', language: 'JS', description: 'A 2D physics simulation'},\n        {name: 'marionette', language: 'Python', description: 'A small Super Mario clone'},\n        {name: 'checkers', language: 'Rust and TypeScript', description: 'A simple checkers multiplayer game for the browser'},\n        {name: 'backlog', language: 'Rust', description: 'A backlog-tracking tool (WIP)'},\n        {name: 'Bezier', language: 'C#', description: 'A simple program for drawing Bezier curves'},\n        {name: 'gameboy', language: 'C++', description: 'A snake and tetris clone'},\n        {name: 'nes-emulator', language: 'C++', description: 'An unfinished NES emulator'},\n        {name: 'pic16-tetris', language: 'C', description: 'PIC microcontroller tetris'},\n    ]\n\n    return (\n        <div className='github'>\n            {notableProjects.map(project => <Project key={project.name} {...project} />)}\n        </div>\n    )\n}\n\nfunction Project(props: GithubProject) {\n    return (\n        <div className='project'>\n            <ExternalLink className='project-link' href={githubUrl(props.name)}>\n                <p className='project-title'>{props.name}</p>\n                <p className='project-details'>— {props.description} written in {props.language}</p>\n            </ExternalLink>\n        </div>\n    )\n}\n\nfunction githubUrl(projectName: string): string {\n    return `https://github.com/ennmichael/${projectName}`\n}\n","import React from 'react'\nimport {CSSTransition, SwitchTransition} from 'react-transition-group'\nimport {ButtonName} from './Menu'\nimport Email from './Email'\nimport CV from './CV'\nimport Github from './Github'\nimport './css/MainContent.css'\n\nexport interface MainContentProps {\n    selectedButton?: ButtonName\n}\n\nexport default function MainContent(props: MainContentProps) {\n    function Content() {\n        switch (props.selectedButton) {\n            case 'email':\n                return <Email/>\n            case 'cv':\n                return <CV/>\n            case 'github':\n                return <Github/>\n        }\n\n        return <></>\n    }\n\n    return (\n        <SwitchTransition mode='out-in'>\n            <CSSTransition key={props.selectedButton} timeout={200} classNames={'fade'}>\n                <div className='content'>\n                    <Content/>\n                </div>\n            </CSSTransition>\n        </SwitchTransition>\n    )\n}","import React from 'react'\nimport './css/BackgroundGradient.css'\n\nexport interface BackgroundGradientProps {\n    offset: string\n}\n\nexport default function BackgroundGradient(props: BackgroundGradientProps) {\n    const style = {transform: `translateY(${props.offset})`}\n\n    return (\n        <div className='background-gradient' style={style}/>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, {useState} from 'react'\nimport Menu, {ButtonName} from './Menu'\nimport MainContent from './MainContent'\nimport BackgroundGradient from './BackgroundGradient'\nimport './css/App.css'\n\nexport default function App() {\n    const [selectedButton, setSelectedButton] = useState<ButtonName | undefined>()\n    const [backgroundGradientOffset, setBackgroundGradientOffset] = useState('0')\n\n    function onSelectedButtonChange(newButton: ButtonName) {\n        setSelectedButton(newButton)\n        setBackgroundGradientOffset('50%')\n    }\n\n    return (\n        <>\n            <BackgroundGradient offset={backgroundGradientOffset}/>\n            <div>\n                <Menu className={selectedButton ? 'top-menu' : 'center-menu'}\n                      onSelectedButtonChange={onSelectedButtonChange}/>\n                <MainContent selectedButton={selectedButton}/>\n            </div>\n        </>\n    )\n}\n"],"sourceRoot":""}